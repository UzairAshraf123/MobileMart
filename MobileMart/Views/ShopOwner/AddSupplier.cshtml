@model MobileMart.DB.ViewModel.AddSupplierViewModel
@using Microsoft.AspNet.Identity;
@using MobileMart.Utility;
@{
    ViewBag.Title = "AddSupplier";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@if (ViewBag.message!=null)
{
    <h3 class="alert">@ViewBag.message</h3>

}
<div class="row">
    <div class="col-md-4">
        <h2>Add Supplier</h2>
        <hr />
        <p>If Supplier is already existed then search that supplier...</p>
        <input type="checkbox" id="test">
        <div class="btn-group" data-toggle="buttons">
            <input type="text" id="SearchBox" class="prueba form-control" placeholder="Search here..." disabled="disabled" />
        </div>
    </div>
    <div class="col-md-8">
        <h2>Add New Supplier</h2>
        <hr/>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="CreatedON" value="@System.DateTime.Now" />
            <fieldset id="target">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control" ,@placeholder ="Supplier Name" } })
                            @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierContact, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SupplierContact, new { htmlAttributes = new { @class = "form-control" ,@placeholder = "03211234567" } })
                            @Html.ValidationMessageFor(model => model.SupplierContact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SupplierAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                            @Html.ValidationMessageFor(model => model.SupplierAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control", @placeholder = "12345-1234567-1" } })
                            @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </fieldset>
        }
    </div>
</div>
@section Scripts {

    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {

            $('#test').click(function () {
                 var checked = this.checked;
                 console.log(checked);
                 if (checked) {
                     $("#target").attr("disabled", true);
                 } else {
                     $("#target").attr("disabled", false);
                 }
                 $('.prueba').each(function () {
                     $("#SearchBox").prop('disabled', !checked);
                 });
            });

            var shopId = @User.Identity.GetShopID();
            $("#SearchBox").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Ajax/SearchSupplier",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term, ShopID: shopId },
                        success: function (data) {
                           response($.map(data, function (item) {
                                return { label: item.Name, value: item.Name, Route: item.Route };
                            }))
                        }
                    })
                },
                select: function (event, ui) {
                    //redirect to url
                    window.location = ui.item.Route;
                },
                messages: {
                    noResults: "", results: function (resultsCount) { }
                }
            });
        });
        
    </script>
}
