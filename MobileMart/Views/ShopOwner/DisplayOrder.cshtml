@model MobileMart.DB.ViewModel.OrderReportViewModel

@{
    ViewBag.Title = "DisplayOrders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Orders</h2>

@using (Html.BeginForm("DisplayOrder", "ShopOwner", FormMethod.Post, new { @class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="form-group form-inline">
                <div class="col-md-5">
                    <label for="From" style="cursor:pointer">
                        <i class="glyphicon glyphicon-calendar"></i>
                    </label>
                    @Html.TextBoxFor(m => m.From, new { @class = "form-control", @placeholder = "From", @hidden = "hidden" })
                    @Html.ValidationMessageFor(m => m.From, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    <label for="To" style="cursor:pointer">
                        <i class="glyphicon glyphicon-calendar"></i>
                    </label>
                    @Html.TextBoxFor(m => m.To, new { @class = "form-control", @placeholder = "To", @max = DateTime.Now })
                    @Html.ValidationMessageFor(m => m.To, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <input type="submit" name="Find" value="Find" class="btn btn-primary btn-sm" />
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12" id="ContentToPrint">
        <h1><span><i onclick="Print('ContentToPrint')" class="fa fa-print pull-right" style="cursor:pointer" title="Print"></i></span></h1>
        <table class="table table-striped table-hover dataTable" id="table-editable">
            <thead>
                <tr role="row">
                    <th>
                        Customer
                    </th>
                    <th>
                        Created
                    </th>
                    <th>
                        Tax
                    </th>
                    <th>
                        Shipping
                    </th>
                    <th>
                        Sub-Total
                    </th>
                    <th>
                        Total
                    </th>
                    <th>
                        Detail
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Orders)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedOn)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Tax)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Shipping)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubTotal)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Total)
                        </td>
                        <td>
                            @Html.ActionLink(" ", "OrderDetails", "ShopOwner", new { orderID = item.OrderID }, new { @class = "glyphicon glyphicon-eye-open" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script type="text/javascript">
   $(function () {
        var dateFormat = "mm/dd/yy",
            from = $("#From")
                .datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1
                })
                .on("change", function () {
                    to.datepicker("option", "minDate", getDate(this));
                }),
            to = $("#To").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1
            })
                .on("change", function () {
                    from.datepicker("option", "maxDate", getDate(this));
                });

        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }

            return date;
        }
    });
    $(document).ready(function () {
        $("#From").val("");
        $("#To").val("");

    });
</script>

@section scripts{
   
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    @*<script src="~/Scripts/jquery-1.11.js"></script>*@
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/table_editable.js"></script>

}