@using Microsoft.AspNet.Identity
@{ 
    MobileMart.DB.ViewModel.AdminLayoutViewModel adminData = ViewBag.LayoutData;
}
@using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
{
    @Html.AntiForgeryToken()
    <ul class="nav navbar-right top-nav">
        <li class="dropdown" id="NotificationDropDown" >
            <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-bell"></i><span class="badge" id="NotificationCount">0</span> <b class="caret"></b></a>
            <div class="dropdown-menu scrollable-menu">
                <ul class="dropdown-item list-group" id="CustomerNotifications">
                    
                </ul>
                @*<ul class="dropdown-item list-group" id="SupplierNotifications">
                    <li class="list-group-item active">Supplier Notifications</li>
                </ul>*@
                <ul class="dropdown-item list-group" id="ShopNotifications">
                </ul>
                <ul class="dropdown-item list-group" id="OrderNotifications">
                </ul>
                <ul class="dropdown-item list-group" id="ProductNotifications">
                </ul>
            </div>
        </li>
        <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                <i class="fa fa-user"></i>
                @User.Identity.GetUserName()
                <b class="caret"></b>
            </a>
            <ul class="dropdown-menu">
                <li>
                    <a href="@Url.Action("Account","Admin")"><i class="fa fa-fw fa-user"></i> Profile</a>
                </li>
                <li class="divider"></li>
                <li>
                    <a href="javascript:document.getElementById('logoutForm').submit()"><i class="fa fa-fw fa-power-off"></i> Log Out</a>
                </li>
            </ul>
        </li>
    </ul>
    <div class="collapse navbar-collapse navbar-ex1-collapse">
        <ul class="nav navbar-nav side-nav">
            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
                <a href="@Url.Action("Index","Admin")"><i class="fa fa-fw fa-dashboard"></i> Dashboard</a>
            </li>
            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "CreateOwner" ? "active" : "")">
                <a href="@Url.Action("CreateOwner","Admin")"><i class="fa fa-fw fa-plus"></i>Insert New Shop</a>
            </li>
            
            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "DisplayAllShops" ? "active" : "")">
                <a href="@Url.Action("DisplayAllShops","Admin")"><i class="fa fa-fw fa-bar-chart-o"></i> Shops <span class="badge">@adminData.ShopCount</span></a>
            </li>

            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Customers" ? "active" : "")">
                <a href="@Url.Action("AllCustomers","Admin")"><i class="fa fa-fw fa-bar-chart-o"></i> Customers<span class="badge">@adminData.CustomerCount</span></a>
            </li>
            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "DisplayAllProduct" ? "active" : "")">
                <a href="@Url.Action("DisplayAllProduct","Admin")"><i class="fa fa-fw fa-bar-chart-o"></i> Products<span class="badge">@adminData.ProductCount</span></a>
            </li>
            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "DisplayOrders" ? "active" : "")">
                <a href="@Url.Action("DisplayOrders","Admin")"><i class="fa fa-fw fa-bar-chart-o"></i> Orders<span class="badge">@adminData.OrderCount</span></a>
            </li>
            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "AddCategory" ? "active" : "")">
                <a href="@Url.Action("AddCategory","Admin")"><i class="fa fa-fw fa-plus"></i> Add Category</a>
            </li>
        </ul>
    </div>
}
@section Scripts {
    @*<script type="text/javascript">
        function onLoad() {
            alert("aho");
            setTimeout(ajaxRefresh, 5000);
        }
        function ajaxRefresh() {
            $.ajax({
                url: "Ajax/GetNotifications",
                type: "POST",
                dataType: "json",
                data:'',
                success: function (data) {
                    debugger;
                    alert("returned");
                }
            })
        }
        //$(document).ready(function () {
        //    setInterval(function () {
        //        $.ajax({
        //            url: "Ajax/GetNotifications",
        //            type: "POST",
        //            dataType: "json",
        //            success: function (data) {
        //                debugger;
        //                alert("returned");
        //            }
        //        })
        //    },5000);
        //});
    </script>*@
}
