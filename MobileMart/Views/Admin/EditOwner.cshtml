@model MobileMart.DB.ViewModel.EditShopViewModel

@{
    ViewBag.Title = "EditShop";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Shop</h2>
<div class="row">
    <div class="col-md-7">
        @using (Html.BeginForm("EditOwner", "Manage", FormMethod.Post
            , new { @class = "form-horizontal", role = "form" , enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.HiddenFor(model => model.OwnerID)
            @Html.HiddenFor(model => model.UserID)
            <input type="hidden" name="CreatedOn" value="@DateTime.Now" />

            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProfilePhotoPath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <label class="btn btn-default btn-file">
                        Upload Photo..
                        <i class="glyphicon glyphicon-folder-open"></i>
                        <input type="file" name="ProfilePhotoPath" accept="image/*" onchange="loadFile(event)">
                    </label>
                    @Html.ValidationMessageFor(model => model.ProfilePhotoPath, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OwnerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OwnerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        }
        </div>
        <div class="col-md-3">
            <img src="@Url.Content(Model.ProfilePhotoPath)" id="output" class="img-responsive img-thumbnail" height="250" width="250" />
        </div>
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                var loadFile = function (event) {
                    var output = document.getElementById('output');
                    output.src = URL.createObjectURL(event.target.files[0]);
                };
            </script>
        }